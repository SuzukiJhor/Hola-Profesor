#!/usr/bin/env sh
# husky.sh script path may vary based on your project setup
. "$(dirname -- "$0")/_/husky.sh"

# Cores
NC='\033[0m'
BRed='\033[1;31m'

# Regex para encontrar padrões de ID de problema na branch
REGEX_ISSUE_ID="[a-zA-Z0-9,\.\_\-]+-[0-9]+"

# Obter o nome da branch atual
BRANCH_NAME=$(git symbolic-ref --short HEAD)

# Extrair o ID do problema da branch
ISSUE_ID=$(echo "$BRANCH_NAME" | grep -o -E "$REGEX_ISSUE_ID")

# Obter a mensagem de commit
COMMIT_MESSAGE=$(cat "$1")

# Verificar se a branch está no padrão esperado
if [ -z "$ISSUE_ID" ]; then
    echo -e "${BRed}A branch não está no padrão esperado.${NC}" >&2
    exit 1
fi

# Verificar se a mensagem de commit contém o ID do problema
if [[ $COMMIT_MESSAGE == $ISSUE_ID* ]]; then
    exit 0
else
    echo -e "${BRed}A mensagem de commit não contém o ID do problema.${NC}" >&2
    exit 1
fi

# O script termina aqui, então as linhas abaixo não serão executadas.
# Se você quiser continuar a executar o código abaixo, você deve remover o exit 1 acima.

# Adicionar o ID do problema à mensagem de commit (opcional)
echo "$ISSUE_ID: $COMMIT_MESSAGE" > "$1"
